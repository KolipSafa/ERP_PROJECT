// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("857f3a2c-4ab7-4ffa-9855-08ddcabefce4"),
                            Balance = 15250.75m,
                            CompanyName = "Yılmaz İnşaat",
                            CreatedDate = new DateTime(2025, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ahmet.yilmaz@example.com",
                            FirstName = "Ahmet",
                            IsActive = true,
                            LastName = "Yılmaz",
                            PhoneNumber = "05321234567"
                        },
                        new
                        {
                            Id = new Guid("b6a95892-1d17-46f7-1919-08ddcb81e05d"),
                            Balance = 0m,
                            CompanyName = "Kaya Gıda Ltd.",
                            CreatedDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ayse.kaya@example.com",
                            FirstName = "Ayşe",
                            IsActive = true,
                            LastName = "Kaya",
                            PhoneNumber = "05422345678"
                        },
                        new
                        {
                            Id = new Guid("c7b06982-2e28-47f8-2020-08ddcb81e05e"),
                            Balance = 8500m,
                            CompanyName = "Demir Teknoloji",
                            CreatedDate = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mehmet.demir@example.com",
                            FirstName = "Mehmet",
                            IsActive = false,
                            LastName = "Demir",
                            PhoneNumber = "05553456789"
                        },
                        new
                        {
                            Id = new Guid("d8c17a83-3f39-48f9-2121-08ddcb81e05f"),
                            Balance = 120000.50m,
                            CompanyName = "Çelik Sanayi A.Ş.",
                            CreatedDate = new DateTime(2025, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fatma.celik@example.com",
                            FirstName = "Fatma",
                            IsActive = true,
                            LastName = "Çelik",
                            PhoneNumber = "05334567890"
                        },
                        new
                        {
                            Id = new Guid("e9d28b84-404a-49fa-2222-08ddcb81e060"),
                            Balance = 0m,
                            CompanyName = "Arslan Lojistik",
                            CreatedDate = new DateTime(2025, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mustafa.arslan@example.com",
                            FirstName = "Mustafa",
                            IsActive = true,
                            LastName = "Arslan",
                            PhoneNumber = "05445678901"
                        },
                        new
                        {
                            Id = new Guid("fae39c85-515b-4afb-2323-08ddcb81e061"),
                            Balance = 500.25m,
                            CompanyName = "Öztürk Danışmanlık",
                            CreatedDate = new DateTime(2025, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "zeynep.ozturk@example.com",
                            FirstName = "Zeynep",
                            IsActive = true,
                            LastName = "Öztürk",
                            PhoneNumber = "05356789012"
                        },
                        new
                        {
                            Id = new Guid("0bf4ad86-626c-4bfc-2424-08ddcb81e062"),
                            Balance = 25000m,
                            CompanyName = "Aydın Tekstil",
                            CreatedDate = new DateTime(2025, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "huseyin.aydin@example.com",
                            FirstName = "Hüseyin",
                            IsActive = true,
                            LastName = "Aydın",
                            PhoneNumber = "05547890123"
                        },
                        new
                        {
                            Id = new Guid("1cf5be87-737d-4c0d-2525-08ddcb81e063"),
                            Balance = 0m,
                            CompanyName = "Şahin Market",
                            CreatedDate = new DateTime(2025, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "elif.sahin@example.com",
                            FirstName = "Elif",
                            IsActive = false,
                            LastName = "Şahin",
                            PhoneNumber = "05368901234"
                        },
                        new
                        {
                            Id = new Guid("2df6cf88-848e-4d1e-2626-08ddcb81e064"),
                            Balance = 7850.00m,
                            CompanyName = "Koç Otomotiv",
                            CreatedDate = new DateTime(2025, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ibrahim.koc@example.com",
                            FirstName = "İbrahim",
                            IsActive = true,
                            LastName = "Koç",
                            PhoneNumber = "05469012345"
                        },
                        new
                        {
                            Id = new Guid("3ef7df89-959f-4e2f-2727-08ddcb81e065"),
                            Balance = 1250.50m,
                            CompanyName = "Yıldız Mobilya",
                            CreatedDate = new DateTime(2025, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "meryem.yildiz@example.com",
                            FirstName = "Meryem",
                            IsActive = true,
                            LastName = "Yıldız",
                            PhoneNumber = "05370123456"
                        },
                        new
                        {
                            Id = new Guid("4f08e08a-a6b0-4f30-2828-08ddcb81e066"),
                            Balance = 0m,
                            CompanyName = "Can Bilişim",
                            CreatedDate = new DateTime(2025, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ali.can@example.com",
                            FirstName = "Ali",
                            IsActive = true,
                            LastName = "Can",
                            PhoneNumber = "05531234567"
                        },
                        new
                        {
                            Id = new Guid("5f19f18b-b7c1-4041-2929-08ddcb81e067"),
                            Balance = 9900m,
                            CompanyName = "Doğan Medya",
                            CreatedDate = new DateTime(2025, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sultan.dogan@example.com",
                            FirstName = "Sultan",
                            IsActive = true,
                            LastName = "Doğan",
                            PhoneNumber = "05392345678"
                        },
                        new
                        {
                            Id = new Guid("6f2a028c-c8d2-4152-3030-08ddcb81e068"),
                            Balance = 4500m,
                            CompanyName = "Kurt Güvenlik",
                            CreatedDate = new DateTime(2025, 4, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "osman.kurt@example.com",
                            FirstName = "Osman",
                            IsActive = false,
                            LastName = "Kurt",
                            PhoneNumber = "05493456789"
                        },
                        new
                        {
                            Id = new Guid("7f3b138d-d9e3-4263-3131-08ddcb81e069"),
                            Balance = 500000m,
                            CompanyName = "Polat Holding",
                            CreatedDate = new DateTime(2025, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hatice.polat@example.com",
                            FirstName = "Hatice",
                            IsActive = true,
                            LastName = "Polat",
                            PhoneNumber = "05314567890"
                        },
                        new
                        {
                            Id = new Guid("8f4c248e-eaf4-4374-3232-08ddcb81e06a"),
                            Balance = 0m,
                            CompanyName = "Güneş Enerji",
                            CreatedDate = new DateTime(2025, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "yusuf.gunes@example.com",
                            FirstName = "Yusuf",
                            IsActive = true,
                            LastName = "Güneş",
                            PhoneNumber = "05515678901"
                        },
                        new
                        {
                            Id = new Guid("9f5d358f-fbe5-4485-3333-08ddcb81e06b"),
                            Balance = 18000m,
                            CompanyName = "Bulut Yazılım",
                            CreatedDate = new DateTime(2025, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emine.bulut@example.com",
                            FirstName = "Emine",
                            IsActive = true,
                            LastName = "Bulut",
                            PhoneNumber = "05346789012"
                        },
                        new
                        {
                            Id = new Guid("af6e4690-0cf6-4596-3434-08ddcb81e06c"),
                            Balance = 75000m,
                            CompanyName = "Özdemir Metal",
                            CreatedDate = new DateTime(2025, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "murat.ozdemir@example.com",
                            FirstName = "Murat",
                            IsActive = true,
                            LastName = "Özdemir",
                            PhoneNumber = "05437890123"
                        },
                        new
                        {
                            Id = new Guid("bf7f5791-1da7-46a7-3535-08ddcb81e06d"),
                            Balance = 0m,
                            CompanyName = "Aksoy Kozmetik",
                            CreatedDate = new DateTime(2025, 3, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sibel.aksoy@example.com",
                            FirstName = "Sibel",
                            IsActive = false,
                            LastName = "Aksoy",
                            PhoneNumber = "05368901234"
                        },
                        new
                        {
                            Id = new Guid("cf806892-2eb8-47b8-3636-08ddcb81e06e"),
                            Balance = 2500.50m,
                            CompanyName = "Çetin Emlak",
                            CreatedDate = new DateTime(2025, 7, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ramazan.cetin@example.com",
                            FirstName = "Ramazan",
                            IsActive = true,
                            LastName = "Çetin",
                            PhoneNumber = "05529012345"
                        },
                        new
                        {
                            Id = new Guid("df917993-3fc9-48c9-3737-08ddcb81e06f"),
                            Balance = 3200m,
                            CompanyName = "Taş Mermer",
                            CreatedDate = new DateTime(2025, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "yasemin.tas@example.com",
                            FirstName = "Yasemin",
                            IsActive = true,
                            LastName = "Taş",
                            PhoneNumber = "05380123456"
                        });
                });

            modelBuilder.Entity("Core.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Yüksek performanslı dizüstü bilgisayar",
                            IsActive = true,
                            Name = "Laptop Pro X1",
                            Price = 32000m,
                            SKU = "LP-PRO-X1",
                            StockQuantity = 50
                        },
                        new
                        {
                            Id = 2,
                            Description = "Ergonomik ve hassas optik mouse",
                            IsActive = true,
                            Name = "Kablosuz Mouse",
                            Price = 850m,
                            SKU = "MS-WL-001",
                            StockQuantity = 200
                        },
                        new
                        {
                            Id = 3,
                            Description = "RGB aydınlatmalı, oyuncular için",
                            IsActive = true,
                            Name = "Mekanik Klavye",
                            Price = 2500m,
                            SKU = "KB-MECH-RGB",
                            StockQuantity = 150
                        },
                        new
                        {
                            Id = 4,
                            Description = "Canlı renkler ve net görüntüler",
                            IsActive = true,
                            Name = "4K Monitör 27\"",
                            Price = 8999m,
                            SKU = "MON-4K-27",
                            StockQuantity = 80
                        },
                        new
                        {
                            Id = 5,
                            Description = "8-in-1 bağlantı noktası adaptörü",
                            IsActive = true,
                            Name = "USB-C Hub",
                            Price = 1200m,
                            SKU = "HUB-USBC-81",
                            StockQuantity = 300
                        },
                        new
                        {
                            Id = 6,
                            Description = "Hızlı veri transferi için taşınabilir SSD",
                            IsActive = true,
                            Name = "Harici SSD 1TB",
                            Price = 3500m,
                            SKU = "SSD-EXT-1TB",
                            StockQuantity = 120
                        },
                        new
                        {
                            Id = 7,
                            Description = "Görüntülü görüşmeler için Full HD kamera",
                            IsActive = false,
                            Name = "Webcam 1080p",
                            Price = 1500m,
                            SKU = "WC-FHD-01",
                            StockQuantity = 180
                        },
                        new
                        {
                            Id = 8,
                            Description = "7.1 Surround sesli oyuncu kulaklığı",
                            IsActive = true,
                            Name = "Gaming Headset",
                            Price = 2800m,
                            SKU = "HS-GM-71",
                            StockQuantity = 90
                        },
                        new
                        {
                            Id = 9,
                            Description = "Fitness takibi ve bildirimler",
                            IsActive = true,
                            Name = "Akıllı Saat SE",
                            Price = 6500m,
                            SKU = "SW-SE-01",
                            StockQuantity = 250
                        },
                        new
                        {
                            Id = 10,
                            Description = "Eğlence ve iş için ideal tablet",
                            IsActive = true,
                            Name = "Tablet 10\"",
                            Price = 7800m,
                            SKU = "TAB-10-STD",
                            StockQuantity = 110
                        },
                        new
                        {
                            Id = 11,
                            Description = "Modüler ve verimli PSU",
                            IsActive = false,
                            Name = "Güç Kaynağı 750W",
                            Price = 2100m,
                            SKU = "PSU-750W-MD",
                            StockQuantity = 70
                        },
                        new
                        {
                            Id = 12,
                            Description = "Yeni nesil oyun ve grafik performansı",
                            IsActive = true,
                            Name = "Ekran Kartı RTX 4070",
                            Price = 25000m,
                            SKU = "GPU-RTX-4070",
                            StockQuantity = 40
                        },
                        new
                        {
                            Id = 13,
                            Description = "Yüksek hızlı bellek kiti (2x8GB)",
                            IsActive = true,
                            Name = "RAM 16GB DDR5",
                            Price = 1800m,
                            SKU = "RAM-16-DDR5",
                            StockQuantity = 400
                        },
                        new
                        {
                            Id = 14,
                            Description = "Sessiz ve etkili işlemci soğutucusu",
                            IsActive = true,
                            Name = "Soğutucu Fan",
                            Price = 950m,
                            SKU = "FAN-CPU-SLNT",
                            StockQuantity = 220
                        },
                        new
                        {
                            Id = 15,
                            Description = "En yeni işlemciler için ATX anakart",
                            IsActive = true,
                            Name = "Anakart Z790",
                            Price = 9200m,
                            SKU = "MB-Z790-ATX",
                            StockQuantity = 60
                        });
                });

            modelBuilder.Entity("Core.Domain.Entities.Teklif", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<DateTime>("GecerlilikTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MusteriId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TeklifNumarasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TeklifTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ToplamTutar")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId");

                    b.ToTable("Teklifler", (string)null);
                });

            modelBuilder.Entity("Core.Domain.Entities.TeklifSatiri", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BirimFiyat")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Miktar")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("TeklifId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Toplam")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeklifId");

                    b.HasIndex("UrunId");

                    b.ToTable("TeklifSatirlari", (string)null);
                });

            modelBuilder.Entity("Core.Domain.Entities.Teklif", b =>
                {
                    b.HasOne("Core.Domain.Entities.Customer", "Musteri")
                        .WithMany()
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("Core.Domain.Entities.TeklifSatiri", b =>
                {
                    b.HasOne("Core.Domain.Entities.Teklif", "Teklif")
                        .WithMany("TeklifSatirlari")
                        .HasForeignKey("TeklifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Domain.Entities.Product", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teklif");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Core.Domain.Entities.Teklif", b =>
                {
                    b.Navigation("TeklifSatirlari");
                });
#pragma warning restore 612, 618
        }
    }
}
